# Generated by Django 2.2.6 on 2019-10-21 18:16

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Channel',
                'verbose_name_plural': 'Channels',
            },
        ),
        migrations.CreateModel(
            name='DataNeeded',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('sample', models.TextField(verbose_name='Sample')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category', to='atc.Category', verbose_name='Category')),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='channel', to='atc.Channel', verbose_name='Channel')),
            ],
            options={
                'verbose_name': 'Data Needed',
                'verbose_name_plural': 'Data Needed',
            },
        ),
        migrations.CreateModel(
            name='EventID',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Event ID',
                'verbose_name_plural': 'Event IDs',
            },
        ),
        migrations.CreateModel(
            name='LogField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Log Field',
                'verbose_name_plural': 'Log Fields',
            },
        ),
        migrations.CreateModel(
            name='LogType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Log Type',
                'verbose_name_plural': 'Log Types',
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Platform',
                'verbose_name_plural': 'Platforms',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Provider',
                'verbose_name_plural': 'Providers',
            },
        ),
        migrations.CreateModel(
            name='References',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
            ],
            options={
                'verbose_name': 'Reference',
                'verbose_name_plural': 'References',
            },
        ),
        migrations.CreateModel(
            name='ResponseAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('author', models.CharField(max_length=255, verbose_name='Author')),
                ('creation_date', models.DateField(default=datetime.date.today, verbose_name='Creation date')),
                ('workflow', models.TextField(verbose_name='Workflow')),
                ('linked_ra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='atc.ResponseAction', verbose_name='Linked Response Action(s)')),
                ('references', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='references', to='atc.References', verbose_name='References(s)')),
            ],
            options={
                'verbose_name': 'Response Action',
                'verbose_name_plural': 'Response Actions',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Stage',
                'verbose_name_plural': 'Stages',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Volume',
                'verbose_name_plural': 'Volumes',
            },
        ),
        migrations.CreateModel(
            name='ResponsePlaybook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('severity', models.CharField(choices=[('L', 'Low'), ('M', 'Medium'), ('H', 'High')], max_length=1, verbose_name='Severity')),
                ('tlp', models.CharField(choices=[('W', 'White'), ('G', 'Green'), ('A', 'Amber'), ('R', 'Red')], max_length=1, verbose_name='TLP')),
                ('pap', models.CharField(choices=[('W', 'White'), ('G', 'Green'), ('A', 'Amber'), ('R', 'Red')], max_length=1, verbose_name='PAP')),
                ('author', models.CharField(max_length=255, verbose_name='Author')),
                ('creation_date', models.DateField(default=datetime.date.today, verbose_name='Creation date')),
                ('workflow', models.TextField(verbose_name='Workflow')),
                ('containment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='containment', to='atc.ResponseAction', verbose_name='Containment')),
                ('eradication', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eradication', to='atc.ResponseAction', verbose_name='Eradication')),
                ('identification', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='identification', to='atc.ResponseAction', verbose_name='Identification')),
                ('lessons_learned', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lessons_learned', to='atc.ResponseAction', verbose_name='Lessons learned')),
                ('recovery', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recovery', to='atc.ResponseAction', verbose_name='Recovery')),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='atc.Tag', verbose_name='Tag(s)')),
            ],
            options={
                'verbose_name': 'Response Playbook',
                'verbose_name_plural': 'Response Playbooks',
            },
        ),
        migrations.AddField(
            model_name='responseaction',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stage', to='atc.Stage', verbose_name='Stage'),
        ),
        migrations.CreateModel(
            name='LoggingPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('default', models.CharField(max_length=255, verbose_name='Default')),
                ('configuration', models.TextField(verbose_name='Configuration')),
                ('eventID', models.ManyToManyField(null=True, to='atc.EventID', verbose_name='Event ID(s)')),
                ('references', models.ManyToManyField(blank=True, null=True, to='atc.References', verbose_name='References(s)')),
                ('volume', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='atc.Volume', verbose_name='Volume')),
            ],
            options={
                'verbose_name': 'Logging Policy',
                'verbose_name_plural': 'Logging Policies',
            },
        ),
        migrations.CreateModel(
            name='Enrichment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('author', models.CharField(max_length=255, verbose_name='Author')),
                ('configuration', models.TextField(verbose_name='Config')),
                ('data_needed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_needed', to='atc.DataNeeded', verbose_name='Data Needed')),
                ('data_to_enrich', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_to_enrich', to='atc.DataNeeded', verbose_name='Data to Enrich')),
                ('new_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_field', to='atc.LogField', verbose_name='New field(s)')),
                ('references', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='atc.References', verbose_name='References(s)')),
                ('requirement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='atc.Enrichment', verbose_name='Requirement(s)')),
            ],
            options={
                'verbose_name': 'Enrichment',
                'verbose_name_plural': 'Enrichments',
            },
        ),
        migrations.CreateModel(
            name='DetectionRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('data_needed', models.ManyToManyField(blank=True, null=True, to='atc.DataNeeded')),
            ],
            options={
                'verbose_name': 'Detection Rule',
                'verbose_name_plural': 'Detection Rules',
            },
        ),
        migrations.AddField(
            model_name='dataneeded',
            name='fields',
            field=models.ManyToManyField(null=True, related_name='fields', to='atc.LogField', verbose_name='Log Field(s)'),
        ),
        migrations.AddField(
            model_name='dataneeded',
            name='loggingpolicy',
            field=models.ManyToManyField(blank=True, null=True, related_name='loggin_policy', to='atc.LoggingPolicy', verbose_name='Logging Policy(ies)'),
        ),
        migrations.AddField(
            model_name='dataneeded',
            name='platform',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='platform', to='atc.Platform', verbose_name='Platform'),
        ),
        migrations.AddField(
            model_name='dataneeded',
            name='provider',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='provider', to='atc.Provider', verbose_name='Provider'),
        ),
        migrations.AddField(
            model_name='dataneeded',
            name='references',
            field=models.ManyToManyField(blank=True, null=True, to='atc.References', verbose_name='References(s)'),
        ),
        migrations.AddField(
            model_name='dataneeded',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='type', to='atc.LogType', verbose_name='Log Type'),
        ),
    ]
